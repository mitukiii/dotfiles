#!/usr/bin/env ruby

require 'open-uri'
require 'json'
require 'uri'

GITHUB_API_ENDPOINT     = 'https://api.github.com'
GITIGNORE_TEMPLATES_URI = File.join(GITHUB_API_ENDPOINT, '/gitignore/templates')

CACHE_DIR = ENV['TMPDIR'] || ENV['TMP'] || ENV['TEMP'] || '/tmp'

def cache_or_get(uri)
  cache_name = URI.parse(uri).path.gsub(/\//, '_') + '.json'
  cache_file = File.join(CACHE_DIR, cache_name)
  if File.exists?(cache_file)
    content = open(cache_file).read
  else
    content = open(uri).read
    open(cache_file, 'w') { |f| f.puts content }
  end
  JSON.parse(content)
end

if ARGV.empty?
  puts 'Usage: git ignore-template <language>...'
  puts
  puts 'Languages:'
  languages = cache_or_get(GITIGNORE_TEMPLATES_URI)
  puts '  ' + languages.join(' ')
else
  ARGV.each do |lang|
    begin
      response = cache_or_get(File.join(GITIGNORE_TEMPLATES_URI, lang))
      puts "## #{lang}"
      puts response['source']
      puts
    rescue => e
      $stderr.puts "#{lang}: #{e.message}"
    end
  end
end
